setwd("~/Documents/tuna_theory/seasonal/")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 time=1:204#
  quartz()#
   par(mfrow=c(2,3))#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, 204), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 204, by=12), labels = (seq(1, 18, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/4 #
     #legend("topright", legend=paste0("A_50 is ", age_m+1, " years"), bty="n")#
          }#
 mapply(plot_length, length_data, length_filenames)
getwd()
setwd("/Users/hkindsvater/Documents/tuna_theory/seasonal/")
getwd()
setwd("~/Documents/tuna_theory/seasonal/")#
data_files <- list.files(pattern = "\\.csv$")
eggs=1:10000#
#
Y=eggs^1.5#
#
plot(eggs, Y)
eggs=1:10000#
#
Y=eggs^1.9#
#
plot(eggs, Y)
eggs=1:10000#
#
Y=eggs^1.9#
#
plot(eggs, Y, type="l", lwd=4)
eggs=1:10000#
#
Y=eggs^1.9#
#
plot(eggs, Y, type="l", lwd=4, las=1)
eggs=1:10000#
#
Y=eggs^1.9/1+e06#
#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Eggs in nest", ylab="Larvae hatched out")
eggs=1:10000#
#
Y=eggs^1.9/1+06#
#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Eggs in nest", ylab="Larvae hatched out")
eggs=1:10000#
#
Y=eggs^1.9/1+07#
#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Eggs in nest", ylab="Larvae hatched out")
eggs=1:10000#
#
Y=(eggs^1.9)/1e+07#
#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Eggs in nest", ylab="Larvae hatched out")
eggs=1:10000#
#
Y=(eggs^1.9)/1e+06#
#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Eggs in nest", ylab="Larvae hatched out")
eggs=1:10000#
#
Y=(eggs^1.9)/1e+05#
#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Eggs in nest", ylab="Larvae hatched out")
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Eggs in nest", ylab="Larvae hatched out")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Eggs in nest", ylab="Care per egg")
eggs=1:900#
#
Y=(eggs^1.9)/1e+06#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", ylab="Larvae hatched over season")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="Care per egg")
eggs=1:900#
#
Y=(eggs^1.9)/1e+05#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", ylab="Larvae hatched over season")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="Care per egg")
eggs=1:900#
#
Y=(eggs^1.9)/1e+05#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", main="Care per egg")
eggs=1:900#
#
Y=(eggs^1.9)/1e+05#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab=", main="Care per egg")
eggs=1:900#
#
Y=(eggs^1.9)/1e+05#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg")
eggs=1:900#
#
Y=(eggs^1.9)/1e+04#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg")
eggs=1:900#
#
Y=(eggs^1.9)/1e+03#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg")
eggs=1:900#
#
Y=(eggs^2.9)/1e+03#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg")
eggs=1:900#
#
Y=(eggs^2.4)/1e+03#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg")
eggs=1:900#
#
Y=(eggs^2.4)/1e+04#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number")#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg")
eggs=1:900#
#
Y=(eggs^2.4)/1e+04#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number", xlim=c(200, 900))#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg", xlim=c(200, 900))
eggs=1:900#
#
Y=(eggs^2.4)/1e+03#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number", xlim=c(200, 900))#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg", xlim=c(200, 900))
eggs=1:900#
#
Y=(eggs^2.4)/1e+03#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number", xlim=c(250, 900))#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg", xlim=c(250, 900))
eggs=1:900#
#
Y=(eggs^1)/1e+03#
par(mfrow=c(2,2))#
plot(eggs, Y, type="l", lwd=4, las=1, xlab="Male Size", main="Larvae hatched over season", ylab="Number", xlim=c(250, 900))#
plot(eggs, Y/eggs, type="l", lwd=4, las=1, xlab="Male Size", ylab="", main="Care per egg", xlim=c(250, 900))
counter = 1#
reprolimit=0.2#
Kappa=5#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <- rep(1, timebin) #c(rep(1, 6), rep(2, 6)) # #
raiseT <- rep(0, timebin)#c(rep(4,6), rep(0, 6))  # #
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xaxt="n", lwd=5, ylim=c(0, 7800000), col=1)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
counter = 1#
reprolimit=0.2#
Kappa=5#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <- rep(1, timebin) #c(rep(1, 6), rep(2, 6)) # #
raiseT <- rep(0, timebin)#c(rep(4,6), rep(0, 6))  # #
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xaxt="n", lwd=5, ylim=c(0, 7800000), col=1)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
counter = 1#
reprolimit=0.2#
Kappa=5#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <- rep(1, timebin) #c(rep(1, 6), rep(2, 6)) # #
raiseT <- rep(0, timebin)#c(rep(4,6), rep(0, 6))  # #
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xaxt="n", lwd=5, ylim=c(0, 200000), col=1)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
counter = 1#
reprolimit=0.2#
Kappa=5#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <- rep(1, timebin) #c(rep(1, 6), rep(2, 6)) # #
raiseT <- rep(0, timebin)#c(rep(4,6), rep(0, 6))  # #
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xaxt="n", lwd=5, ylim=c(0, 2000000), col=1)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
counter = 1#
reprolimit=0.2#
Kappa=5#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <- rep(1, timebin) #c(rep(1, 6), rep(2, 6)) # #
raiseT <- rep(0, timebin)#c(rep(4,6), rep(0, 6))  # #
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Length (cm)", lwd=5, ylim=c(0, 2000000), col=1)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
counter = 1#
reprolimit=0.2#
Kappa=5#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <- rep(1, timebin) #c(rep(1, 6), rep(2, 6)) # #
raiseT <- rep(0, timebin)#c(rep(4,6), rep(0, 6))  # #
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2000000), col=1)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2000000), col=1)
counter = 1#
reprolimit=0.2#
Kappa=5#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <-   c(rep(1, 6), rep(2, 6)) # rep(1, timebin)#
raiseT <- c(rep(4,6), rep(0, 6))  # rep(0, timebin)#
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=1)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4) lines(Income[1, ]*scale, lty=1, col=1, lwd=2)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=3)#
   lines(Income[1, ]*scale, lty=1, col=1, lwd=2)
lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, lty=1, col=1, lwd=2)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, lty=1, col=1, lwd=1.25)
lines(Income[1, ]*scale, lty=8, col=1, lwd=1.25)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, lty=4, col=1, lwd=1.25)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, lty=3, col=1, lwd=1.25)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, lty=3, col=1, lwd=4)
plot(Income[1, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, type="b",  col=1, lwd=4)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, type="b",  col=1, lwd=4)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, type="b",  col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, type="o",  col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=5)#
   lines(Income[1, ]*scale, type="c",  col=1)
lines(Income[1, ]*scale, type="l", lty=6,  col=1)
lines(Income[1, ]*scale, type="l", lty=6, lwd=3, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4)  lines(Income[1, ]*scale, lty=1, col=2, lwd=7)#
   lines(Income[1, ]*scale, type="l", lty=6, lwd=3, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=7)#
   lines(Income[1, ]*scale, type="l", lty=7, lwd=3, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=7)#
   lines(Income[1, ]*scale, type="l", lty=5, lwd=3, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=7)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=3, col=1)
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=1)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=4)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)#
 lines(MTcosts[7, ], type="l", lty=4, lwd=3, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=7)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=3, col=1)
counter = 1#
reprolimit=0.2#
Kappa=15#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <-   c(rep(1, 6), rep(2, 6)) # rep(1, timebin)#
raiseT <- c(rep(4,6), rep(0, 6))  # rep(0, timebin)#
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=4)#
lines(MTcosts[1, ], lty=1, col=2, lwd=2)#
 lines(MTcosts[7, ], type="l", lty=4, lwd=3, col=1)#
#plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 450*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=2)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=1, col=1)
max(Income)
max(Income*scale)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 800*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=2)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=1, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 1000*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=2)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=1, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 1200*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=2)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=1, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 1250*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=2)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=1, col=1)
lines(Income[1, ]*scale, lty=1, col=2, lwd=4)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=3, col=1)
counter = 1#
reprolimit=0.2#
Kappa=5#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <-   c(rep(1, 6), rep(2, 6)) # rep(1, timebin)#
raiseT <- c(rep(4,6), rep(0, 6))  # rep(0, timebin)#
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
# plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=4)#
# lines(MTcosts[1, ], lty=1, col=2, lwd=2)#
 # lines(MTcosts[7, ], type="l", lty=4, lwd=3, col=1)#
 #plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 1250*scale), col=4, xlab="Body length (cm)" )  lines(Income[1, ]*scale, lty=1, col=2, lwd=2)#
   lines(Income[1, ]*scale, type="l", lty=4, lwd=1.5, col=1)
lines(Income[7, ]*scale, lty=1, col=4, lwd=3.5)
lines(Income[1, ]*scale, type="l", lty=4, lwd=4.5, col=1)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 1250*scale), col=4, xlab="Body length (cm)" )      lines(Income[1, ]*scale, type="b", pch=20, lty=1, col=2, lwd=2)
plot(Income[7, ]*scale, type="l", ylab="Monthly Income (J)", lwd=5, ylim=c(0, 1250*scale), col=4, xlab="Body length (cm)" )      lines(Income[1, ]*scale, type="b", pch=20,   col=2)
plot(Income[1, ]*scale, type="b", pch=20, ylab="Monthly Income (J)",lwd=4, ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale, type="b",lwd=4,  col=4)
plot(Income[1, ]*scale, type="b", pch=20, ylab="Monthly Income (J)",lwd=1.5, ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale, type="b",lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="b", pch=20, ylab="Monthly Income (J)",lwd=1.5, ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="b", pch=20, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="b", pch=20, cex=.25, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="b", pch=20, cex=.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="b", pch=3, cex=.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="b", pch=2, cex=.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="b", pch=9, cex=.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="l", lty=2, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lwd=1.5,  col=4)
plot(Income[1, ]*scale, type="l", lty=1, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lty=2, lwd=2.5,  col=4)
plot(Income[1, ]*scale, type="l", lwd=2.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lty=2, lwd=2.5,  col=4)
plot(Income[1, ]*scale, type="l", lwd=2.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      lines(Income[7, ]*scale,  lty=2, lwd=2.5,  col=4)
counter = 1#
reprolimit=0.2#
Kappa=15#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <-   c(rep(1, 6), rep(2, 6)) # rep(1, timebin)#
raiseT <- c(rep(4,6), rep(0, 6))  # rep(0, timebin)#
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
# plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=4)#
# lines(MTcosts[1, ], lty=1, col=2, lwd=2)#
 # lines(MTcosts[7, ], type="l", lty=4, lwd=3, col=1)#
 # plot(Income[1, ]*scale, type="l", lwd=2.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      # lines(Income[7, ]*scale,  lty=2, lwd=2.5,  col=4)#
       lines(Income[1, ]*scale,  lty=2, lwd=5,  col=2)#
		 lines(Income[7, ]*scale,  lty=2, lwd=5,  col=4)
lines(Income[1, ]*scale,  lty=1, lwd=5,  col=2)
plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=4)#
lines(MTcosts[1, ], lty=2, col=2, lwd=5)
counter = 1#
reprolimit=0.2#
Kappa=15#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 290#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <-   c(rep(1, 6), rep(2, 6)) # rep(1, timebin)#
raiseT <- c(rep(4,6), rep(0, 6))  # rep(0, timebin)#
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
#plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=4)#
lines(MTcosts[1, ], lty=2, col=2, lwd=5)#
lines(MTcosts[7, ], lty=1, col=4, lwd=5)#
 # plot(Income[1, ]*scale, type="l", lwd=2.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      # lines(Income[7, ]*scale,  lty=2, lwd=2.5,  col=4)#
# #        lines(Income[1, ]*scale,  lty=1, lwd=5,  col=2)#
		 # lines(Income[7, ]*scale,  lty=2, lwd=5,  col=4)
counter = 1#
reprolimit=0.2#
Kappa=15#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 295#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <-   c(rep(1, 6), rep(2, 6)) # rep(1, timebin)#
raiseT <- c(rep(4,6), rep(0, 6))  # rep(0, timebin)#
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
 plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=4)#
lines(MTcosts[1, ], lty=2, col=2, lwd=5)#
# lines(MTcosts[7, ], lty=1, col=4, lwd=5)#
 # plot(Income[1, ]*scale, type="l", lwd=2.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      # lines(Income[7, ]*scale,  lty=2, lwd=2.5,  col=4)#
# #        lines(Income[1, ]*scale,  lty=1, lwd=5,  col=2)#
		 # lines(Income[7, ]*scale,  lty=2, lwd=5,  col=4)
counter = 1#
reprolimit=0.2#
Kappa=15#
f_h=20#
#
timebin=12#
c1=1#
 Temp <- 290#
#
Tmax = 18*timebin  #monthly stime steps, maximum lifespan is 18 years#
#
#describe temperature dependent costs#
k=1.3e-23#
E = 1.04e-19#
theta=0.66#
coef1  = 5e+16/3 ##normalization constant puts tuna SMR in the same ballpark as the costs Kitchell et al. (1978) Bioenergetic spectra of skipjack and yellowfin tunas, pp 359 IN Sharp G.D. and Dizon A.E. eds. The Physiological Ecology of Tunas, Academic press.  #
#
#physiological parameters#
a <- 1e-5 #from ICCAT 2015 BFT length-weight relationship#
scale <-  4.2e+6 #J/kg #from Chapman et al. 2011#
b=1.8#
d = 2.4#
#
#STATE VARIABLES#
phi=1 # only 1 environment#
Lmax=375  #maximum size of 4 meters#
Lmin = 1 #
Estoresmax=350 #maximum stores in loop  #
#
storelimit= 0.75 #proportion of structural mass that inidivduals can devote to energy storage#
storemin = 0.1#
####################################################################################################################################################################################################
###Lookup Tables - look up costs and food functions so they are not calculated every time#
#
###Sizespectra allow us to descripbe prey preference, encounter, consumption to predict prey availability and mass-specific mortality:#
  #total mass maximum in kg#
##Prey availability   #
phi_a <- 3 #from table 2.2 in Andersen book#
K_c <- 10 #from table 2.2, this is averaged over "all" - so PP in stomach of all preds and preys have a MR of 1224 independently of body size - but htis is something that changes with ecosystem according to KAPPA, eg less in deep sea, more in upwelling#
lam <- 1.95#
#
##mass dependent mortality#
phi_p <- 0.07 #from table 2.2 in Andersen book#
f_0 <- 0.6 #somewhere between 0 and 1, but predators rarely caught with totally full stomach#
hprime <- 17.2#
#coefficient on the consumption rate from table 2.2#
met_mort <- -0.25 #the argument in Andersen book is that mass-specific rates such as mortality scales with the metabolic esp of 3/4 (Brown et al. 2004). #
####ADD SEASONALITY IN RESOURCES AND FOOD TO SOME MONTHS#
kmult <-   c(rep(1, 6), rep(2, 6)) # rep(1, timebin)#
raiseT <- c(rep(4,6), rep(0, 6))  # rep(0, timebin)#
Mass <- a*(Lmin:Lmax)^3 #
#
mu<- phi_p*f_h*Mass^met_mort #note we are excluding "background" mortality that is independent of size.... #
#
Income = matrix(nrow = timebin, ncol = length(Mass))#
MTcosts = matrix(nrow = timebin, ncol = length(Mass))#
for (kap in 1:timebin) {#
  Income[kap, ] <- kmult[kap]*Kappa*phi_a*K_c*Mass^(2-lam) #this describes the scaling with size and ecostystem richness#
  MTcosts[kap, ] <-coef1*(Mass)^theta*(exp(-E/(k*(Temp+raiseT[kap])))) #
}#
# plot(MTcosts[7, ], type="l", ylab="Monthly Metabolic Costs (J)", xlab="Body length (cm)", lwd=5, ylim=c(0, 2500000), col=4)#
#lines(MTcosts[1, ], lty=2, col=2, lwd=5)#
  lines(MTcosts[7, ], lty=1, col=4, lwd=2)#
lines(MTcosts[1, ], lty=2, col=2, lwd=2)#
#
 # plot(Income[1, ]*scale, type="l", lwd=2.5, ylab="Monthly Income (J)",  ylim=c(0, 1250*scale), col=2, xlab="Body length (cm)" )      # lines(Income[7, ]*scale,  lty=2, lwd=2.5,  col=4)#
# #        lines(Income[1, ]*scale,  lty=1, lwd=5,  col=2)#
		 # lines(Income[7, ]*scale,  lty=2, lwd=5,  col=4)
setwd("~/Documents/tuna_theory/HiCosts/seasonal/Temp295")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
#
      legend("topright", legend=paste0("A_50 is ", round(age_m+1, 2), " years"), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/seasonal/Temp295")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
#
      legend("topright", legend=paste0("A_50 is ", round(age_m+1, 2), " years"), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/Temp295")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
#
      legend("topright", legend=paste0("A_50 is ", round(age_m+1, 2), " years"), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
repro_data
repro_data[[4]]
11180400/125050262
setwd("~/Documents/tuna_theory/Temp290")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
#
      legend("topright", legend=paste0("A_50 is ", round(age_m+1, 2), " years"), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/HiCosts/Temp295/constant")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
#
      legend("topright", legend=paste0("A_50 is ", round(age_m+1, 2), " years"), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/HiCosts/Temp295/seasons")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
#
      legend("topright", legend=paste0("A_50 is ", round(age_m+1, 2), " years"), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/HiCosts/Temp295/seasons")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
#
      legend("topright", legend=paste0("A_50 is ", round(age_m+1, 2), " years"), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/HiCosts/Temp295/constant")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
#
      legend("topright", legend=paste0("A_50 is ", round(age_m+1, 2), " years"), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/Temp295/")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[round(age_m*12)]#
      legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", size_m, " cm")), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[round(1, age_m*12)]#
   legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", size_m, " cm")), bty="n")#
   # print(repro_data[,-1]) #
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
   legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", size_m, " cm")), bty="n")#
   # print(repro_data[,-1]) #
     }
quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
   #legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", size_m, " cm")), bty="n")#
    print(size_m) #
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
   #legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", size_m, " cm")), bty="n")#
    print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
windowframe
quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
   #legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", size_m, " cm")), bty="n")#
    print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      print(size_m)#
   #legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", size_m, " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", size_m, " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
setwd("~/Documents/tuna_theory/Temp290/")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
mapply(plot_repro, repro_data, length_data, repro_filenames)
quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
setwd("~/Documents/tuna_theory/seasonal/Temp290/")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
setwd("~/Documents/tuna_theory/seasonal/Temp295/")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
  quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)
library(readr)#
library(ggplot2)#
#
rate_dat<-read_csv("~/Documents/tuna_theory/data_summary.csv") #bring in the summary spreadsheet I made of trait data#
#
quartz()#
a <- ggplot(rate_dat,#
    aes(x=Predation, y=Amat) #
    ) + #
	geom_point(aes(colour = Temp, shape=Food), size = 3 ) +#
        scale_size_manual(values=c(4, 1)) +#
#
   scale_shape_manual(values=c(15, 20)) +#
   scale_color_manual(values = c("blue", "red")) +#
   labs(y="Age at 50% Maturity")+#
facet_wrap(~Seasonality) #
a
quartz()#
E <- ggplot(rate_dat,#
    aes(x=Predation, y=Sizemat) #
    ) + #
	geom_point(aes(colour = Temp, shape=Food), size = 3 ) +#
        scale_size_manual(values=c(4, 1)) +#
#
   scale_shape_manual(values=c(15, 20)) +#
   scale_color_manual(values = c("blue", "red")) +#
   labs(y="Size at 50% Maturity")+#
facet_wrap(~Seasonality) #
E
a <- ggplot(rate_dat,#
    aes(x=Predation, y=Amat) #
    ) + #
	geom_point(aes(colour = Temp, shape=Food), size = 3 ) +#
        scale_size_manual(values=c(4, 1)) +#
#
   scale_shape_manual(values=c(15, 20)) +#
   scale_color_manual(values = c("blue", "red")) +#
   labs(y="Age at 50% Maturity (years)")+#
facet_wrap(~Seasonality) #
a
a
d <- ggplot(rate_dat,#
    aes(x=Predation, y=bodysize) #
    ) + #
	geom_point(aes(colour = Temp, shape=Food), size = 3 ) +#
        scale_size_manual(values=c(4, 1)) +#
#
   scale_shape_manual(values=c(15, 20)) +#
   scale_color_manual(values = c("blue", "red")) +#
   labs(y="Maximum Length (cm)") +#
facet_wrap(~Seasonality) #
d
E <- ggplot(rate_dat,#
    aes(x=Predation, y=Sizemat) #
    ) + #
	geom_point(aes(colour = Temp, shape=Food), size = 3 ) +#
        scale_size_manual(values=c(4, 1)) +#
#
   scale_shape_manual(values=c(15, 20)) +#
   scale_color_manual(values = c("blue", "red")) +#
   labs(y="Size at 50% Maturity (cm)")+#
facet_wrap(~Seasonality) #
E
setwd("~/Documents/tuna_theory/HiCosts/Temp290/constant/")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(4,2)#
# #   quartz()#
   # par(mfrow=windowframe)#
  # plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       # matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     # axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     # maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     # #print(maxsize)#
      # age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      # size_m <- length_data[1, round(age_m*12)]#
      # #print(size_m)#
    # legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # # print(round(age_m*12) )#
     # }#
#
# mapply(plot_repro, repro_data, length_data, repro_filenames)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/HiCosts/Temp290/constant/")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(2,2)#
# #   quartz()#
   # par(mfrow=windowframe)#
  # plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       # matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     # axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     # maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     # #print(maxsize)#
      # age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      # size_m <- length_data[1, round(age_m*12)]#
      # #print(size_m)#
    # legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # # print(round(age_m*12) )#
     # }#
#
# mapply(plot_repro, repro_data, length_data, repro_filenames)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
setwd("~/Documents/tuna_theory/HiCosts/Temp295/")#
data_files <- list.files(pattern = "\\.csv$")#
#
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]   #
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
 Tmax=18#
 time=1:(Tmax*12)#
 windowframe=c(2,2)#
# #   quartz()#
   # par(mfrow=windowframe)#
  # plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       # matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     # axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     # maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     # #print(maxsize)#
      # age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      # size_m <- length_data[1, round(age_m*12)]#
      # #print(size_m)#
    # legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # # print(round(age_m*12) )#
     # }#
#
# mapply(plot_repro, repro_data, length_data, repro_filenames)#
  quartz()#
   par(mfrow=windowframe)#
plot_length <- function(data, filenames) {#
     matplot(t(data[,-1]), type="l", main=substr(filenames, 9, 30), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(data[1, -1]) == max(as.numeric(data[1, -1]))))) + 1 #
     age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
     legend("topleft", legend=paste0("Lmax is ", round(data[1, maxsize]), " cm"), bty="n")#
          }#
      mapply(plot_length, length_data, length_filenames)    #
  # plot_hist <- function(data, filenames) {#
    # hist(data[, 12], breaks=50, xlim=c(50, 350), main=substr(filenames, 13, 49))#
  # }#
  # mapply(plot_hist, length_data, length_filenames)#
 quartz()#
   par(mfrow=windowframe)#
  plot_repro <- function(repro_data, length_data, repro_filenames) {#
	       matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     maxsize <- (min(which(as.numeric(repro_data[1, -1]) == max(as.numeric(repro_data[1, -1]), na.rm=TRUE)))) + 1 #
     #print(maxsize)#
      age_m <- min(which(as.numeric(repro_data[1, -1]) >= 0.5*as.numeric(repro_data[1, maxsize])), na.rm=TRUE)/12 #
      size_m <- length_data[1, round(age_m*12)]#
      #print(size_m)#
    legend("topright", legend=c(paste0("A_50 is ", round(age_m+1, 2), " years"), paste0("Lmat50 is ", round(size_m), " cm")), bty="n")#
   # print(round(age_m*12) )#
     }#
#
mapply(plot_repro, repro_data, length_data, repro_filenames)#
#
  quartz()#
   par(mfrow=windowframe)#
  plot_state <- function(state_data, state_filenames) {#
     matplot(t(state_data[,-1]), type="l", main= substr(state_filenames, 8, 23), col="darkgray", lwd=1.75, lty=1,   ylab="State (J)",   xlab= "Age (years)", xaxt="n", ylim=c(0, 6e+08), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
     }#
#
mapply(plot_state, state_data, state_filenames)#
#
quartz()#
   par(mfrow=windowframe) #
#
fec.exp <-function(ldata1, rdata2, filenames) {#
 	data1 <- as.numeric(ldata1[1,-1])#
 	data2 <- as.numeric(rdata2[1, -1])#
 	  	matplot(t(log(data1[-216])), t(log(data2[-216])), type="p", col="darkgray", pch=20,   main= substr(filenames, 9, 30),  xlab="ln(Length) ", ylim=c(0, 25), xlim=c(0, 7), ylab="ln(Reproduction) ")#
 	print((data1))#
 	print((data2))#
 	  max.rep.age = as.numeric(which.max(data2))#
 	  print(max.rep.age)#
 	  min.rep.age = as.numeric(which.min(data2[-216])) #
 	  print(min.rep.age)#
 	   m1<-lm(log(data2[c(min.rep.age:max.rep.age)])~log(data1[c(min.rep.age:max.rep.age)]))#
 	   b= (log(data2[max.rep.age])-log(data2[min.rep.age])) / (log(data1[max.rep.age]) - log(data1[min.rep.age]) )#
 	    a=0#
 	  if(is.na(coef(m1)[2])==FALSE) abline(m1)#
 	 #abline(a, b)#
 	 #print(coef(m1)[2])#
 	#val<-paste0("Env is ", substr(filenames, 9, 23),", Slope is ", round(as.numeric(coef(m1)[2]), 3))#
    legend("topleft",   legend=paste0("slope is ", round(b, 3), " vs ", round(as.numeric(coef(m1)[2]), 3))) #round(as.numeric(coef(m1)[2]), 3)), bty="n")#
 	   	} #
#
mapply(fec.exp, length_data, repro_data, length_filenames)#
quartz()#
  par(mfrow=windowframe)#
 surv <- function(data, filenames) {#
 	matplot(data[,-1], type="l", main= substr(filenames, 6, 25), col="darkgray", xlab="Age (years)", ylab="Survival", xaxt="n", ylim=c(0, 1.1),xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1)))#
 }#
 	mapply(surv, surv_data, surv_filenames)#
    lnsurv <- function(data, filenames) {#
 	data1<-as.numeric(data[,2])#
 	print(dim(data1))#
 	matplot(log(data1[-1]), type="l", main= substr(filenames, 7, 30), col="darkgray", xlab="Age (years)", ylab="ln(Survival)", xaxt="n",  ylim=c(-10, 0), xlim=c(0.5, Tmax*12))#
     axis(1, at = seq(0, 220, by=12), labels = (seq(1, 19, by=1))) #
   m2<-lm(log(data1[-1])~time[-length(time)])#
   abline(m2)#
   print(paste0("Slope is ", round(as.numeric(coef(m2)[2]), 3)))#
   legend("bottomleft",   legend=paste0("slope is ",round(as.numeric(coef(m2)[2]), 3)), bty="n")#
 }#
 mapply(lnsurv, surv_data, surv_filenames)
